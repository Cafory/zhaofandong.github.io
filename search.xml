<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[10/20 学习日志]]></title>
    <url>%2F2018%2F10%2F20%2F10-20-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[最近又各种各样的突发事情，比如什么交中期报告。也只能怪自己准备不周吧。不能说是运气不好，天道酬勤。我相信我每一天所做的都会称为日后有用的。不能放弃，要坚持，脚踏实地，仰望天空。 伪元素 使用伪元素来表示元素中的一些特殊的位置12345678&lt;p&gt;wosh&lt;/p&gt;p:first-letter&#123;color:red&#125;p:first-line&#123;background:yellow;&#125;p:before&#123; content：XXX&#125; 一般表示元素最前面的部分一般before与content使用after元素最后面 属性选择器title属性 可以给任何标签制定 当鼠标移入时，元素中的title中将作为提示的文字显示p[属性名]{}p[titile=”hello”]{};p[title^=”ab”]{};以ab开头p[title$=””]{};以什么结尾p[title*=””]{}包含什么什么 子元素选择器p:first-child{};p:last-chlid{};p:nth-child(1/even 偶数/odd 奇数 ){可以选中任意位置的元素};p:first-of-type{} 所有元素的第一个last-of-type nth-of-typechild 所有子元素 type 实在当前类型的子元素中排列 兄弟元素选择器span之后的紧挨着的p变色span + p{background:yellow;}span ~p{ 选中后面的所有的P}; 否定伪类为所有的p元素设置一个背景颜色为黄色，出了class值为hello的作用 可以从已许那种的元素中剔除某些元素语法： :not(选择器) p:not(.hello){}; 样式继承 孩子可以继承父亲的遗产 在 css中 祖先元素上的样式，也会被它的后代元素所继承 我是span中的文字 我是外面的span 给p设定样式 ，span也会有样式 利用集成，可以精益血基本的样式设置给祖先元素，这样后代的元素将会自动继承这些元素 并不是所有的样式都会被子元素继承 比如：背景相关的像是都不会被继承 边框相关的样式 定位相关的样式 当不同的选择器选择我同一个元素时候并且设置相同的样式，样式之间产生了冲突，最终到底采用哪个选择器哪一个样式，有选择器优先级决定 内联样式 1000 id选择器 100 类和伪类 10 元素选择器 优先级1 通配选择器 0 继承样式，没有优先级 涉及到a的伪类一共有四个 link visited hover active 四个是一样的 一样的时候 按顺序来显示 上标 sup sub下标 del 删除线 ins 下划线 pre 预格式 代码格式 code专门用来保存代码的]]></content>
  </entry>
  <entry>
    <title><![CDATA[10/19 学习日志]]></title>
    <url>%2F2018%2F10%2F19%2F10-19-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[html规范html 中不取分大小写，但是我们一般都是用小写html 中的注释不能嵌套html 标签必须结构完整 要么成对出现 要么自结束标签html 标签可以嵌套 但不能交叉嵌套html 标签中的属性必须有值 值必须加引号 双引号 单引号都可以内联框架 在一个页面引入另一个页面iframe 来创建一个内敛框架 属性: src:指向一个外部页面的路径，可以使用相对路径 width; height;name：可以为我们的内联框架命名 src12345在我们的现实开发中，我们不推荐使用内敛框架，内敛框架中的内容不会被搜索引擎检索超链接 使用a标签来创建一个超链接属性：herf 只想链接跳转的目标地址，可以写一个相对路径也可以写一个完整的地址```&lt;a herf=&quot;.....&quot;&gt; &lt;/a&gt; _self,表示在当前窗口中打开（默认值）_blank,在新的窗口中打开链接 herf1```&lt;br/&gt; src12345678以上设置一个内联框架的name属性值，链接将会在制定的内联框架中打开\&lt;center&gt;标签中的内容会默认在页面中居中显示&lt;/center&gt;创建超链接是，如果地址不确定可以直接写一个#号作为占位符回到顶部如果将我们链接地址设为#，则点击超链接以后会自动跳转到当前页面的顶部html 有一个属性每一个元素都可以设置，该属性可以作为我们标签的唯一属性，这个属性就是id```&lt;a id=&quot;bottom&quot; &gt; ```不能用数字开头 id属性在同一个页面中 只能有一个 不能重复 ```&lt;a herf=&quot;#bottom&quot;&gt; 联系我们： 发送电子邮件的超链接 点击链接以后可以自动打开计算机中默认的客户端herf=”mailto:邮件地址” css 层叠样式表多层的结构 一层叠一层样式表可以将css编写到style的属性当中 给谁设置写在谁的里面将样式直接编写到style属性中，这种要是称为内联样式内联样式只对当前的标签的元素内容起作用内联样式不方便复用结构与表现耦合，不方便后期的维护，不方便使用，尽量避免使用style12345678910也可以将css样式编写到head中的style标签里，然后通过css样式编写到style标签中，通过css选择器选定院所，然后统一为他设置样式，进一步复用，编写到style中也可以是表现和结构进一步分离，也是我们推荐的&lt;style type=&quot;text/css&quot;&gt;css选择器 来选择页面指定元素```p&#123; color:red; font-size:18px &#125; 选中所有的p元素 &lt;/style&gt; text表示文本 css表示 css文件 css编写到外部的文件中，然后通过link标签来讲外部的css文件引入到当前的页面中，这样外部文件中的Css样式表将会应用到当前页面中，rel123456789101112131415161718192021222324252627282930313233将css样式统一编写到外部的样式表中，完全是结构和表现分离，可以是样式表在不同的页面使用，最大限度地使样式可以进行复用，将统一写在样式表中，通过link标签引入，可以利用浏览器的缓存加快用户访问的速度提高了用户体验。所以在开发中我们最推荐使用的方式就是用外部的css文件。在css中只能用css注释/*...只能写在style标签和css文件中*/选择器 声明块 选择器通过选择器可以选中页面中制定的元素，并且将声明块中的样式应用到选择器对应的元素上。声明块用一堆&#123;&#125;括起来实际上是一组一组名值对多个声明用;隔开声明的样式名和样式值用：来连接块元素和内联元素div就是一个块元素 块元素独占一行p h1 h2 h3 div这个标签没有任何语义 就是纯粹一个块元素 主要用来对我们的页面进行布局 span是一个内联元素 （行内元素）所谓行内元素，指的是只占自身大小的元素，不会占用一行a, img ,ifram span span 没有任何语义 span标签专门用来选中文字，然后为文字来设置样式 块元素主要重要做页面的布局，内联元素主要用来选中文本中设置样式 一般情况下只使用块元素去包含内联元素，而不会使用内联元素去包含一个块元素a元素可以包含任意元素，除了它本身p元素不可以包含任何块元素 css 常用选择器选中所有的p元素```p&#123; color:red ;&#125;h1&#123; color:red;&#125; id选择器通过元素的id的属性值选择唯一一个元素12345678&#123;&#125;#p1&#123;font-size:20px &#125;&lt;p id=&quot;p1&quot;&gt;&lt;/p&gt; 我们可以为元素与设置class属性，class属性和id属性类似，只不过class属性可以重复 拥有相同class属性值的元素，我们说他们是一组元素class1&lt;p class=&quot;2&quot;&gt;&lt;p&gt; 类选择器 通过元素的class属性值选中一组元素 123.p2&#123;color:red&#125; class可以同时为一个元素设置过个class属性值，多个值之间使用空格隔开 class12345678910选择器分组通过选择器分组可以同时选择多个选择器对应的元素语法：选择器1，选择器2，选择器N&#123;&#125;通配选择器可以选择页面中所有的元素```*&#123;color：red; &#125; 复合选择器（交集选择器） 作用： 可以选中同时满足多个选择器的元素 语法：选择器1选择器2选择器N{} 一盘多用于class 对于id选择器来说 不建议使用复合选择器12&lt;p&gt;&lt;span&gt;,,,&lt;/span&gt;&lt;/p&gt;&lt;/div&gt; 元素之间的关系： 父元素：直接包含子元素的元素 div是p的父元素 而不是 span的父元素 子元素：直接被父元素包含的元素 祖先元素 div 是span的祖先元素 后代元素元素：。。。 兄弟元素：拥有同样的父元素的元素是兄弟元素。 后代元素选择器： 选定制定元素的后代元素 语法：祖先元素 后代元素{} 子元素选择器： 选中制定父元素的指定子元素 语法：父元素&gt;子元素{} IE6 不支持子元素选择器 伪类专门用来表示元素的一种状态 比如：访问过的超链接，比如普通的超链接，比如获取焦点的文本框。 当我们需要为处在这些状态的元素设置样式的时候，可以给他们设计伪类 a:link 正常连接 a:visited 访问过的链接 a:hover 鼠标滑过的链接 a:active 正常点击的链接 1```a:link&#123;color:red&#125; 由于涉及到用户的隐私问题，所以使用visited伪类只能设置用户的字体颜色123```a:active&#123;&#125;```超链接被点击的状态 p:hover&#123;&#125;也可以hover 和 active 也可以为其他的元素设计 但是 ie6不支持 超链接以外的元素 设置 。 文本输入框input：focus{ background-color:yellow;}12::selection 为P标签选中的内容使用样式 注意在火狐中需要其他的写法 前面加上-moz- ```p::selection&#123;background-color:orange&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[10/18 学习日志]]></title>
    <url>%2F2018%2F10%2F18%2F10-18-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[今天复习了html的基础内容，因为今天比较忙碌，所以简单的记录了一点。相对路径：相对路径指的是当前资源目录所在的位置1&lt;img src=&quot;../../image/2.gif&quot; alt=&quot;图片显示不出来的时候的文字&quot;&gt; 图片的格式: jpeg图片支持的颜色比较多，图片可以压缩，不能透明 一般用来保存照片等颜色丰富的图片gif： 颜色较少，简单透明，动态图。 图片单一的时候或者动态图的时候可以使用gifpng:用来支持颜色多，复杂透明的图片 图片使用规则： 效果不一致，效果好的，效果一致，选择小的。]]></content>
      <categories>
        <category>-学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[10/17 学习日志]]></title>
    <url>%2F2018%2F10%2F17%2F10-17-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[html5 尚硅谷系列视频网页有三部分组成：w3c标准结构 表现 行为html css javascript结构用于描述页面的结构css控制页面的元素的样式javascript用于响应用户操作W2SSchool离线手册 html标签列表 &lt;!DOTYPE html&gt; 这是一个声明html5的 格式 不然浏览器会进入怪异模式 无法进行解析 完整的标签被成为元素 几进制就是满几进一 在中文系统中 默认都是使用GB2312 在html中，一些如&lt;&gt;这种特殊的字符是不能直接使用的 需要使用一些特殊的符号来表示这些特殊的字符，这些特殊符号我们称之位实体&lt;转义字符串&gt; 刘景澜琪解析到实体是，会自动将实体转换器对应的字符 实体的语法：12345&amp;实体的名字;&lt; &amp;lt;&gt; &amp;gt;空格 &amp;nbsp;版权符号 &amp;copy;]]></content>
      <categories>
        <category>-学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[10/16 学习日志 bootstrap4初步学习]]></title>
    <url>%2F2018%2F10%2F16%2F10-16-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97-bootstrap4%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[今天的学习有点尴尬，准备学习bootstrap4。但是在视频中可以直接通过控制div class text-center 来控制文本位置，但是源文件和我的操作不成功。准备重新开始学习。html5和css了。今天下载了layui和 bt4的包。一个星期内准备看完视频。]]></content>
      <categories>
        <category>-学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[10/15 学习日志]]></title>
    <url>%2F2018%2F10%2F15%2F10-15-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[最近比较忙，事件匆忙，快速记录最近学到的东西。 首先是今天刚刚遇到的，如何取消鼠标悬停效果，就是那个淡蓝色的东西，我相信很多人也会遇到。之前我选择会选择在blend中慢慢磨一个出来，因为18号之前要做完，所以，我快速的从网上抄了代码过来。 123456789101112131415161718&lt;Style x:Key=&quot;NormalMouseButton&quot; TargetType=&quot;Button&quot;&gt; &lt;Setter Property=&quot;OverridesDefaultStyle&quot; Value=&quot;True&quot; /&gt; &lt;Setter Property=&quot;Cursor&quot; Value=&quot;Hand&quot; /&gt; &lt;Setter Property=&quot;Template&quot;&gt; &lt;Setter.Value&gt; &lt;ControlTemplate TargetType=&quot;Button&quot;&gt; &lt;Border Name=&quot;border&quot; BorderThickness=&quot;&#123;TemplateBinding BorderThickness&#125;&quot; BorderBrush=&quot;&#123;TemplateBinding BorderBrush&#125;&quot; Background=&quot;&#123;TemplateBinding Background&#125;&quot;&gt; &lt;ContentPresenter HorizontalAlignment=&quot;Center&quot; VerticalAlignment=&quot;Center&quot; /&gt; &lt;/Border&gt; &lt;ControlTemplate.Triggers&gt; &lt;Trigger Property=&quot;IsMouseOver&quot; Value=&quot;True&quot;&gt; &lt;Setter Property=&quot;Opacity&quot; Value=&quot;0.8&quot; /&gt; &lt;/Trigger&gt; &lt;/ControlTemplate.Triggers&gt; &lt;/ControlTemplate&gt; &lt;/Setter.Value&gt; &lt;/Setter&gt; &lt;/Style&gt; 将这一段代码放入windows.Resourses 中，之后再button中引用style，一定要特别注意，引用的时候要加上StasticResource.在之后的学习日志之后我会提到。接下来我将补充我昨天晚上遇到的问题。首先是如何再WPF显示网页（参考资料：https://blog.csdn.net/veechange/article/details/72764364和https://www.cnblogs.com/cela/p/5000262.html） 我选择的方法直接再后台Grid引用Source new URI第二个WPF中如何让TextBox中的文字实现垂直居中（参考资料：https://bbs.csdn.net/topics/391049047）第三个WPF passwordbox 圆角制作（参考资料：https://www.cnblogs.com/renzhendewo/archive/2013/06/28/3160416.html）将以下节点复制到app.xaml的&lt;Application.Resources&gt;节点下 &lt;Style TargetType=&quot;PasswordBox&quot;&gt; &lt;Setter Property=&quot;Template&quot;&gt; &lt;Setter.Value&gt; &lt;ControlTemplate TargetType=&quot;PasswordBox&quot;&gt; &lt;Grid&gt; &lt;Rectangle RadiusX=&quot;3&quot; RadiusY=&quot;3&quot; Fill=&quot;{TemplateBinding Background}&quot; Stroke=&quot;#7e94a9&quot;/&gt; &lt;ScrollViewer SnapsToDevicePixels=&quot;{TemplateBinding SnapsToDevicePixels}&quot; x:Name=&quot;PART_ContentHost&quot; Template=&quot;{DynamicResource ScrollViewerControlTemplate1}&quot;/&gt; &lt;/Grid&gt; &lt;/ControlTemplate&gt; &lt;/Setter.Value&gt; &lt;/Setter&gt; &lt;/Style&gt; 第四个WPF将TextBox的边框设为圆角（参考资料：https://www.cnblogs.com/tommy-huang/p/6475791.html） &lt;TextBox&gt; &lt;TextBox.Resources&gt; &lt;Style TargetType=&quot;{x:Type Border}&quot;&gt; &lt;Setter Property=&quot;CornerRadius&quot; Value=&quot;4&quot;/&gt; &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;#c1d0dc&quot;/&gt; &lt;/Style&gt; &lt;/TextBox.Resources&gt; &lt;/TextBox&gt;]]></content>
      <categories>
        <category>-学习</category>
      </categories>
      <tags>
        <tag>-C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#基础课堂 第一课内容]]></title>
    <url>%2F2018%2F10%2F11%2FC-%E5%9F%BA%E7%A1%80%E8%AF%BE%E5%A0%82-%E7%AC%AC%E4%B8%80%E8%AF%BE%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[第一堂课程内容 上课没听懂的同学多看几遍。 一 首先， 什么是软件？软件其实是一种计算机程序，而计算机程序是为了得到某种结果，由计算机等具有信息处理能力的硬件装置执行的代码话指令集合。 软件开发相关的概念： 1.算法： 算法是指对计算机工作步骤和方法的描述，算法的每一个步骤都是严格规定好的，使其能够被计算机识别并正确执行，并且每一个步骤都能够被计算机理解为一个或者一组唯一的工作，而不会是计算机产生歧义。算法必须有开始和结束，并且保证算法规定的每一个步骤最终都能够被完成。 2.数据结构：数据结构就是指各种类型数据之间的相互关系。 3.IDE：IDE是Integrated Development Enviornment 的缩写，表示“集成开发环境”，它是一种用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试工具和图形化用户界面工具等，例如，用于开发C#程序的Visual Studio、用于开发Java程序的Eclipse等，都是集成开发环境 4.SDK： SDK是software Development Kit 的缩写，中文意思是“软件开发工具包”。 5.编辑：编译是把计算机语言变成计算机可以识别的二进制语言，由于计算机只识别0和1，所以编译程序九十八使用计算机语言编写的程序，编译成计算机可以识别的二进制程序的过程。 二C#语言的特点：1.彻底的面向对象设计，C#具有面向对象语言应有的一切特性：封装，继承和多态。2.兼容性好。3.完善的错误、异常处理机制。 三在编写代码的时候，深蓝色是关键字，浅蓝色是标识符，其余是C#语句。大多都是这样的。]]></content>
      <categories>
        <category>-教学</category>
      </categories>
      <tags>
        <tag>-C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[特五动词等]]></title>
    <url>%2F2018%2F09%2F22%2F%E7%89%B9%E4%BA%94%E5%8A%A8%E8%AF%8D%E7%AD%89%2F</url>
    <content type="text"><![CDATA[&nbsp;今天看书，翻到特殊的五段动词，他们虽然 る 前面是 ィ段 ェ段 结尾，但是动词活用的时候使用五段动词的变法。所以特地摘出来。以便之后复习。 &nbsp;あざける「嘲る」（嘲笑）&nbsp;&nbsp;いる「要る」（需要） &nbsp;&nbsp; おちいる「陥る」（陷入） かげる「陰る」（遮住） かける「翔る」（飞翔） かじる（咬） いじる「弄る」（摆弄） きる「切る」（切断） かえる「帰る」（回去） きしる（倾轧） くつがえる（翻） ける「蹴る」（踢） さえぎる（遮盖） すべる「滑る」（滑） しくじる（失败）しげる「茂る」（繁茂） しめる「湿る」（湿） しゃべる（说） ちぎる「契る」（约定） ちる「散る」（谢，落） にぎる「握る（握） ねる「練る」（冶炼，锻造） ののしる「罵る」（骂） ひねる（扭，拧） ひるがえる「翻る」（飘动） ふける（沉迷） へる「減る」（减少） ほとばしる（迸出） まじる（混杂） みなぎる（涨满）よこぎる「横切 る」（横穿） よみがえる（醒）しる「知る」(知道） 以上内容来自于《学日语必读丛书-动词》 （ps: 加分类和标签的时候 一定要有两个空格）]]></content>
      <categories>
        <category>-日语</category>
      </categories>
      <tags>
        <tag>-心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建评论出现的问题以及心得]]></title>
    <url>%2F2018%2F09%2F20%2F%E6%90%AD%E5%BB%BA%E8%AF%84%E8%AE%BA%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E5%BF%83%E5%BE%97%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;首先，先甩出Valine的官方传送门：[Valine官网]一切的源头都在这。也会有很多主题的解决方法在这。 &nbsp;&nbsp;之前我用的主题是一个AL开头的一个，叫什么名字我也忘了。然后呢，我想在我的博客下面加入评论的插件，但是根据网络上Valine的教程并没有什么很好的解决方法。于是我再官网之中找到了方法，按照他的要求修改配置文件并且更改了脚本。但是，不知道大家有没有发现，再官网下来的脚本并不是js结尾而是pug作为后缀。然后，我的脚本改错了。（十分委屈╥﹏╥…） &nbsp;&nbsp;于是就乘着这次机会干脆直接换一个主题，建议用next。当然也强烈建议在GitHub上面下载。[Github上的Next主题]。为什么建议这样做呢？因为下面的方法操作都是最根本最基础的，虽然全都是英文注释。 下来之后，再按照网上普遍的Valine教程和leanCloud就可以完成搭建。 ###&nbsp;&nbsp;事实证明，选对一个模板会少有很多搭建的问题，建议大家先从next开始‘&nbsp;&nbsp;今天就到这里了。也做好项目的tureMore部分，明天再是另一个界面。也许能好好的过这个中秋节了。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;晚安 ：）]]></content>
      <tags>
        <tag>-心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今日关于搭建hexo博客的标签和分类的心得]]></title>
    <url>%2F2018%2F09%2F19%2F%E4%BB%8A%E6%97%A5%E5%85%B3%E4%BA%8E%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E7%9A%84%E5%BF%83%E5%BE%97%2F</url>
    <content type="text"><![CDATA[今天忽然想到 如果每一篇文章发出来没有分类的话，看的人会看不到，因为生活的琐事很多不如来个分类或者来个标签。 关于分类，我猜想，应该是由hexo的主题模板来控制的。因为我添加了tags之后，每篇新生成的文章都会自带tags： 让我填。但是，我省成了 categories,却没有这个属性。观察了nextT 主题，发现原因应该就出现在这个母版页上。 还有就是哦 tags: 之后呢 一定要加一个- 不然会报错吼 日后，会想办法更改。 今天，也是很愉快的一天 :) 接下来几天要完成暑假遗留的电子院项目，就偶尔写一些啦。 晚安。 everyone. :)]]></content>
      <tags>
        <tag>-心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[添加tags和categories]]></title>
    <url>%2F2018%2F09%2F19%2F%E6%B7%BB%E5%8A%A0tags%E5%92%8Ccategories%2F</url>
    <content type="text"><![CDATA[现在正在学习如何给文章加上标签，并且考虑将文章分为大类。]]></content>
      <tags>
        <tag>&lt;font face=&quot;微软雅黑&quot;&gt; 学习&lt;/font&gt;</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[the frist eassy]]></title>
    <url>%2F2018%2F09%2F17%2Fthe-frist-eassy%2F</url>
    <content type="text"><![CDATA[#初次见面 从周日到目前为止，我开始搭建了博客，并且，正在用markdown写这手头的这篇日志。怎么说呢。有目标才会有进步吧。从半个月前，平哥初次展示了他的博客之后，当时便有这个想法，我也搭建一个我的博客，于是，有了sette’s page的诞生。但是，为什么花了半个月，因为我花了半天的时间看了一下需要的技术，果断的放弃了之后。反而在前天，闲着没事的时候，尝试的做了一下，花了两个小时，便搭建成功。 也是蛮好笑的。自己一直无论什么事情都会去对别人说试一试，反而到自己这里却更容易胆怯。好在这一次。我成功了。 关于这次的搭建，又可以参考很多的文献。所以，我也就不再做一篇教程关于如何搭建的。但是，还是要提一下，最后需要用到命令符来讲hexo放进一个新的文件夹里。并且 转换用 cd 。 对于我这个门外汉来说，其实也是需要一点的时间。 好在，还是做出来了。 大家好，我是Sette，一个学习编程的日语生。 今后我的博客里大概会有我的日语学习过程以及编程的内容，请多多关照。]]></content>
  </entry>
</search>
